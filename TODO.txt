TODO:

-More visualizations to better understand network progress:
	-Euclidean distance of current weight vector relative to initial vector
	-Save some diverse set of examples, and graph activation sparsity on the set by layer
	-Top N lowest and N highest cost examples from a large data set
-Implement a running average of the competency metric and save as a Network attribute
-add computational time as Network attribute (to supplement 'age' and 'experience')

Eventually:

-allow the network freedom to parameterize its own training: namely at least having it
 compute some metric rating its competency, and weight the relative values of material to
 wins/losses accordingly.
